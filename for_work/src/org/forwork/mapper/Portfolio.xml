<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.forwork.mapper.PortfolioMapper">
	<cache />
	
	<select id="listPortfolio" parameterType="String" resultType="Portfolio">
		select *
			from portfolio
			where member_id = #{member_id}
			order by portfolio_id
	</select>
	
	<select id="listLanguage" parameterType="String" resultType="Portfolio_language">
		select *
			from PORTFOLIO_LANGUAGE_VIEW
			where member_id=#{member_id}
			order by portfolio_language
	</select>
	<select id="selectPortfolio" parameterType="String" resultType="Portfolio">
		select *
			from portfolio
			where portfolio_id=#{portfolio_id}
	</select>
	
	<update id="updatePortfolio" parameterType="Portfolio">
		update portfolio 
			set portfolio_title = #{portfolio_title},
			portfolio_start_date = #{portfolio_start_date},
			portfolio_end_date = #{portfolio_end_date},
			portfolio_detail = #{portfolio_detail}
			where portfolio_id = #{portfolio_id}
	</update>
	
	<insert id="insertPortfolio" parameterType="Portfolio" >
		insert into portfolio
			(portfolio_id, member_id, portfolio_title, portfolio_start_date, portfolio_end_date, portfolio_detail)
			values
			(portfolio_seq.nextval,#{member_id},#{portfolio_title},#{portfolio_start_date},#{portfolio_end_date},#{portfolio_detail})
	</insert>
	
	<select id="getPortfolio_max_id" resultType="string">
		select max(portfolio_id)
			from portfolio
	</select>
	
	<insert id="insertPfLanguage" parameterType="Portfolio_language">
		insert into portfolio_language(portfolio_id, portfolio_language, portfolio_language_seq)
			values(
				#{portfolio_id},
				#{portfolio_language},
				portfolio_language_seq.nextval
			)
	</insert>
	
	
	<select id="loadMemberCard" parameterType="String" resultType="Member">
	select name, email from member
		where member_id = #{member_id}
	</select>
	
<!-- 	<select id="loadMemberLanguage" parameterType="String" resultType="Portfolio_language">
	select distinct portfolio_language
		from portfolio_language_view
		where member_id = #{member_id}
	</select> -->
	
<!-- 	<select id="countMemberLanguage" parameterType="Portfolio_language" resultType="Integer">
	select count(portfolio_language)
		from portfolio_language_view
		where member_id= #{member_id}
		group by rollup(portfolio_language)
		order by portfolio_language
	</select> -->
	
	<!-- 통계값을 가져오기 위한 hashMap 구성 -->
	<resultMap type="HashMap" id="langStatMap">
		<result column="portfolio_language" property="language"/>
		<result column="count(*)" property="langCount"/>
	</resultMap>
	
	<select id="countMemberLanguage" parameterType="String" resultMap="langStatMap">
	select portfolio_language, count(*)
		from portfolio_language_view
		where member_id=#{member_id}
		group by rollup(portfolio_language)
		order by portfolio_language
	</select>

	

</mapper>